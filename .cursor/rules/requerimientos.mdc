---
alwaysApply: true
---

Documento de Requerimientos - From EarthData to Action

1. INFORMACIÓN DEL PROYECTO
   Nombre del Proyecto: AirCast - From EarthData to Action
   Challenge: NASA Space Apps Challenge 2025
   Tecnología: Next.js (Frontend & Backend)
   Fecha Límite: 5 de octubre, 11:59 PM (hora local)

2. REQUERIMIENTOS FUNCIONALES
   2.1 Integración de Datos
   RF-001: Integración de datos TEMPO
   El sistema debe integrar datos en tiempo casi real del instrumento TEMPO de NASA
   Debe utilizar la versión más reciente del producto TEMPO disponible
   Debe procesar datos de gases traza: ozono (O₃), dióxido de nitrógeno (NO₂), dióxido de azufre (SO₂) y formaldehído
   RF-002: Integración de datos de estaciones terrestres
   El sistema debe integrar mediciones de calidad del aire de redes terrestres (Pandora, OpenAQ)
   Debe permitir la validación cruzada entre datos satelitales y terrestres en tiempo real
   RF-003: Integración de datos meteorológicos
   El sistema debe integrar datos meteorológicos relevantes para la calidad del aire
   Debe incluir: velocidad y dirección del viento, temperatura, humedad, presión atmosférica
   Debe considerar fenómenos como inversiones térmicas y patrones estacionales
   RF-004: Gestión de fuentes de datos
   El sistema debe identificar y mostrar claramente el origen de cada dato
   Debe citar específicamente las fuentes de datos utilizadas
   2.2 Pronóstico y Análisis
   RF-005: Generación de pronósticos locales
   El sistema debe generar pronósticos de calidad del aire a nivel de vecindario
   Los pronósticos deben considerar la interacción entre datos satelitales, terrestres y meteorológicos
   Debe aplicar modelos predictivos basados en patrones históricos y condiciones actuales
   RF-006: Análisis de eventos específicos
   El sistema debe identificar y analizar eventos que afectan la calidad del aire:
   Smog
   Tormentas de polvo
   Incendios forestales
   Congestión vehicular
   RF-007: Tendencias históricas
   El sistema debe proporcionar visualización de tendencias históricas de variables de calidad del aire
   Debe permitir análisis temporal para identificar patrones
   2.3 Visualización
   RF-008: Visualización de datos complejos
   El sistema debe presentar información compleja de manera clara y comprensible
   Debe incluir visualizaciones innovadoras y creativas
   Debe incorporar características del paisaje del área analizada
   RF-009: Mapas interactivos
   El sistema debe mostrar mapas interactivos con datos de calidad del aire
   Debe permitir zoom y navegación a nivel de vecindario
   Debe superponer múltiples capas de información
   RF-010: Indicadores visuales de salud
   El sistema debe utilizar códigos de color estándar para niveles de calidad del aire
   Debe proporcionar interpretación clara del impacto en la salud
   2.4 Sistema de Alertas
   RF-011: Alertas proactivas
   El sistema debe enviar alertas oportunas cuando la calidad del aire pueda afectar la salud
   Las alertas deben ser configurables según preferencias del usuario
   RF-012: Notificaciones de cambios
   El sistema debe notificar cambios significativos en la calidad del aire
   Debe alertar sobre eventos inminentes (incendios forestales, tormentas de polvo, etc.)
   RF-013: Personalización de alertas
   El sistema debe permitir configurar umbrales de alerta personalizados
   Debe segmentar alertas según grupos vulnerables
   2.5 Funcionalidades de Usuario
   RF-014: Búsqueda geográfica
   El sistema debe permitir búsqueda por ubicación (dirección, ciudad, código postal)
   Debe detectar automáticamente la ubicación del usuario (con permiso)
   RF-015: Preferencias de usuario
   El sistema debe permitir configurar preferencias:
   Regiones geográficas de interés
   Tipo de audiencia (público general, grupos vulnerables, atletas, etc.)
   Frecuencia de notificaciones
   RF-016: Perfiles de audiencia
   El sistema debe adaptarse a diferentes stakeholders:
   Grupos sensibles a la salud
   Administradores escolares
   Autoridades de transporte
   Equipos de gestión de incendios forestales
   Público general
   RF-017: Datos complementarios
   El sistema puede integrar datasets suplementarios (datos de salud respiratoria, socioeconómicos)
   Debe analizar vulnerabilidad de poblaciones específicas
   2.6 Computación en la Nube
   RF-018: Escalabilidad
   El sistema debe implementar tecnologías que permitan escalado seamless desde dispositivos locales a sistemas en la nube
   Debe optimizar el procesamiento distribuido de grandes volúmenes de datos
   RF-019: Colaboración
   El sistema debe facilitar colaboración entre usuarios y equipos
   Debe mejorar la eficiencia del flujo de trabajo

3. REQUERIMIENTOS NO FUNCIONALES
   3.1 Rendimiento
   RNF-001: Tiempo de respuesta
   Las consultas de calidad del aire deben responder en menos de 3 segundos
   La carga inicial de la aplicación debe completarse en menos de 5 segundos
   RNF-002: Actualización de datos
   Los datos TEMPO deben actualizarse con frecuencia horaria durante el día
   Los datos de estaciones terrestres deben actualizarse cada 15-30 minutos
   RNF-003: Procesamiento escalable
   El sistema debe soportar procesamiento de datos a escala continental (América del Norte)
   Debe manejar múltiples usuarios concurrentes sin degradación del rendimiento
   3.2 Usabilidad
   RNF-004: Facilidad de uso
   La interfaz debe ser intuitiva y no requerir entrenamiento técnico
   La navegación debe ser clara y consistente
   RNF-005: Accesibilidad
   El sistema debe cumplir con estándares WCAG 2.1 nivel AA
   Debe ser responsive y funcionar en dispositivos móviles, tablets y desktop
   RNF-006: Comprensibilidad
   La información debe presentarse de manera fácil de entender para público no técnico
   Debe evitar jerga científica compleja sin explicación
   RNF-007: Multiidioma
   El sistema debe soportar al menos inglés y español
   3.3 Disponibilidad y Confiabilidad
   RNF-008: Disponibilidad
   El sistema debe tener una disponibilidad del 99.5% o superior
   Debe implementar mecanismos de recuperación ante fallos
   RNF-009: Validez científica
   Los pronósticos deben estar basados en metodologías científicamente válidas
   El sistema debe ser viable en el mundo real
   RNF-010: Manejo de errores
   El sistema debe manejar gracefully la falta temporal de datos de fuentes específicas
   Debe informar al usuario sobre limitaciones en los datos disponibles
   3.4 Seguridad
   RNF-011: Protección de datos
   Los datos de usuario deben almacenarse de forma segura
   Debe cumplir con regulaciones de privacidad de datos
   RNF-012: Autenticación opcional
   El sistema debe funcionar sin registro obligatorio
   Debe ofrecer registro opcional para funcionalidades avanzadas
   3.5 Mantenibilidad
   RNF-013: Código limpio
   El código debe seguir mejores prácticas de Next.js
   Debe estar bien documentado y modularizado
   RNF-014: Extensibilidad
   El sistema debe permitir agregar nuevas fuentes de datos fácilmente
   Debe permitir incorporar nuevos algoritmos de predicción
   3.6 Portabilidad
   RNF-015: Compatibilidad de navegadores
   El sistema debe funcionar en Chrome, Firefox, Safari, y Edge (últimas 2 versiones)
   RNF-016: Despliegue en la nube
   El sistema debe poder desplegarse en plataformas cloud (Vercel, AWS, Google Cloud)
   3.7 Legal y Cumplimiento
   RNF-017: Datos abiertos de NASA
   El sistema debe utilizar exclusivamente datos abiertos de NASA y fuentes públicas
   Debe dar crédito apropiado a todas las fuentes de datos
   RNF-018: Acceso gratuito
   El sistema debe ser de acceso gratuito y público
   No debe requerir pagos para funcionalidades básicas
   3.8 Calidad
   RNF-019: Innovación
   El proyecto debe presentar enfoques novedosos o mejoras significativas sobre soluciones existentes
   RNF-020: Comunicación efectiva
   La presentación del proyecto debe comunicar claramente: el reto, la solución y su importancia
   Debe incluir storytelling efectivo en el pitch de video (máx. 30 segundos)

4. CRITERIOS DE EVALUACIÓN NASA
   El proyecto será evaluado según los siguientes criterios:
   4.1 Validez
   Respuesta efectiva al reto planteado
   Viabilidad científica y técnica
   Funcionalidad en el mundo real
   4.2 Impacto
   Magnitud del problema resuelto
   Número de personas beneficiadas
   Potencial de inspiración y ayuda
   4.3 Creatividad
   Novedad de la solución
   Innovación en visualizaciones
   Mejoras sobre soluciones existentes
   4.4 Pertinencia
   Utilidad de la solución
   Facilidad de uso
   Relevancia para stakeholders
   4.5 Presentación
   Efectividad en la comunicación
   Calidad del storytelling
   Claridad en la presentación técnica
   4.6 Diversidad
   Combinación de perfiles diversos en el equipo
   Aprovechamiento de fortalezas individuales
   Colaboración multidisciplinaria

5. ENTREGABLES
   E-001: Video Pitch
   Duración: Máximo 30 segundos (crítico - descalificación automática si excede)
   Idioma: Preferiblemente inglés
   E-002: Presentación
   Máximo 7 diapositivas
   Idioma: Inglés (obligatorio)
   Contenido: Reto, solución, impacto, tecnologías, fuentes de datos
   E-003: Aplicación funcional
   Demo funcional en Next.js
   Código fuente disponible
   Documentación de uso
   E-004: Documentación técnica
   Listado de fuentes de datos utilizadas
   Metodología de pronóstico
   Arquitectura del sistema
   E-005: Fecha límite
   Domingo 5 de octubre - 11:59 PM (hora local)
   Entrega posterior = descalificación automática

6. RECURSOS CLAVE
   Datos TEMPO: NASA Atmospheric Science Data Center
   Datos terrestres: Pandora, TolNet, OpenAQ
   Repositorio oficial: github.com/nasa/spaceapps
   Recursos del reto: Sección "Temas" → Recursos en spaceappschallenge.org

7. ARQUITECTURA TÉCNICA SUGERIDA
   Frontend (Next.js)
   UI/UX responsive, Shadcn tailwind
   Mapas interactivos (Mapbox, Leaflet)
   Gráficos y visualizaciones (Chart.js, D3.js, Recharts)
   Sistema de notificaciones
   Backend (Next.js API Routes)
   API para integración de datos NASA
   tRPC con tanstack Query
   Procesamiento y agregación de datos
   Sistema de alertas
   Caché de datos
   Cloud Computing
   Despliegue en Vercel/AWS/Google Cloud
   Procesamiento distribuido
   Escalado automático
   Storage para datos históricos
